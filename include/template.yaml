template:
  select:
    - name: hdmi_samsung
      state: >
        {% set source = state_attr('media_player.samsung_tv', 'source') %}
        {{ 'Apple' if source == None else source }}
      options: >
        {% set source_list = state_attr('media_player.samsung_tv', 'source_list') %}
        {{ ['Apple'] if source_list == None else source_list }}
      select_option:
        service: media_player.select_source
        target:
          entity_id: media_player.samsung_tv
        data:
          source: >
            {{ option }}

  binary_sensor:
    - unique_id: sidebar_update_color
      state: >
        {% set installed = states('sensor.hass_version_installed') %}
        {% set latest = states('sensor.hass_version_latest') 
        if not installed | regex_search('b') else states('sensor.hass_version_latest_beta') %}
        {{ (installed != latest and installed != 'unknown' and latest != 'unknown')
        or (states('sensor.hacs') != 'unknown' and states('sensor.hacs') | int(default=0) > 0) }}

    - unique_id: imac_vpn
      device_class: connectivity
      icon: >
        mdi:shield-{{ 'alert' if is_state('switch.computer_imac', 'on') and 
        states('sensor.imac_ip') == states('sensor.myip') else 'check' }}
      state: >
        {{ is_state('switch.computer_imac', 'on') and 
        states('sensor.imac_ip') != states('sensor.myip') }}
      attributes:
        friendly_name: VPN


  sensor:
    - unique_id: sidebar
      state: template
      attributes:
        time: >
          {% set hours = now().strftime('%H') %}
          {% set minutes = now().strftime('%M') %}
          <span class="time">
            {{ hours }}<span class="time-colon">:</span>{{ minutes }}
          </span>
        date: |
          <font color='#6a7377'><b>
          {%- if now().day != null %}
          {%- set days = ['Maandag', 'Dinsdag', 'Woensdag', 'Donderdag', 'Vrijdag', 'Zaterdag', 'Zondag'] %}
          {%- set months = ['Januari', 'Februari', 'Maart', 'April', 'Mei', 'Juni', 
          'Juli', 'Augustus', 'September', 'Oktober', 'November', 'December'] %}
            {{- days[now().weekday()] }}<br>
            {{- now().day }} {{ months[now().month-1] }}
          {%- endif -%}
          </b></font>
        greet: |
          <b>
          {%- set time = now().hour %}
          {%- if time <= 1 -%} Goede nacht {{'\U0001F611'}}
          {%- elif time <= 3 -%} Goede nacht {{'\U0001F62A'}}
          {%- elif time <= 5 -%} Goede nacht {{'\U0001F634'}}
          {%- elif time <= 7 -%} Goedemorgen {{'\U0001F4A9'}}
          {%- elif time <= 9 -%} Goedemorgen {{'\u2615\uFE0F'}}
          {%- elif time <= 10 -%} Goedemorgen {{'\U0001F642'}}
          {%- elif time <= 13 -%} Goededag {{'\U0001F60A'}}
          {%- elif time <= 15 -%} Goededag {{'\U0001F60E'}}
          {%- elif time <= 17 -%} Goededag {{'\U0001F44B\U0001F3FB'}}
          {%- elif time <= 19 -%} Goedenavond {{'\U0001F44B\U0001F3FB'}}
          {%- elif time <= 22 -%} Goedenavond {{'\U0001F60C'}}
          {%- elif time <= 23 -%} Goedenavond {{'\U0001F974'}}
          {%- else %} Goedenavond {{'\U0001F974'}}
          {%- endif -%}
          </b>
        weather: |
          {%- set temperature = states('sensor.buienradar_temperature') | round %}
          {%- set weather_state = states('sensor.buienradar_symbol') %}
          {%- set apparent = states('sensor.buienradar_feel_temperature') | round %}
          {%- set precip = states('sensor.buienradar_precipitation') %}
          {% if not is_state('sensor.buienradar_temperature', 'unknown') %}
              Het is {{weather_state}} en {{temperature}}°c. Voelt als {{ apparent }}°c
          {%- else %}
            Kan weersinformatie niet laden...
          {%- endif %}
        battery: |
          {% set entities = states.sensor 
            | selectattr('entity_id', 'search', 'battery|batterij|accu')
            | rejectattr('entity_id', 'search', 'iphone')
            | map(attribute = 'entity_id') | list %}
          {%- for sensor in entities if states(sensor) != 'unknown' and states(sensor) !=
          'unavailable' and states(sensor) != 'None' and states(sensor) | int(default=0) <= 5 %}
            {%- if loop.first %} {{-'\u26A0\uFE0F'}} Batterij {% else %}, {% endif -%}
            {{ state_attr(sensor, 'friendly_name') }} {{ states(sensor) }}%
          {%- endfor %}
        mathem: |
          {%- set start_time = state_attr('calendar.mathem', 'start_time') %}
          {%- set end_time = state_attr('calendar.mathem', 'end_time') %}
          {% if start_time != None %}
            {%- set time = as_timestamp(start_time) | timestamp_custom('%H:%M') %}
            {%- set time_end = as_timestamp(end_time) | timestamp_custom('%H:%M') %}
            {%- set hours = as_timestamp(start_time) | timestamp_custom('%H') | int(default=0) / 24 %}
            {%- set count = (as_timestamp(start_time) - as_timestamp(now())) / 86400 - hours %}
            {%- set day = as_timestamp(start_time) | timestamp_custom('%A') 
                      | replace('Monday', 'Maandag')
                      | replace('Tuesday', 'Disndag')
                      | replace('Wednesday', 'Woensdag')
                      | replace('Thursday', 'Donderdag')
                      | replace('Friday', 'Vrijdag')
                      | replace('Saturday', 'Zaterdag')
                      | replace('Sunday', 'Zondag') %}
            {%- if count <= -1.0 -%}
              Er is geen lopende bestelling bij Picnic
            {%- elif count <= 0.0 -%}
              {{'\U0001F6D2'}} Picnic komt vandaag tussen {{ time }}-{{ time_end }}
            {%- elif count <= 1.0 -%}
              Picnic komt morgen tussen {{ time }}-{{ time_end }}
            {%- elif count <= 2.0 -%}
              Picnic komt overmorgen tussen {{ time }}-{{ time_end }}
            {%- else -%}
              Picnic komt over {{ (count + hours) | round }} dagen op {{ day }} tussen {{ time }}-{{ time_end }}
            {%- endif %}
          {%- else -%}
            Er is geen lopende bestelling bij Picnic
          {%- endif %}


    - unique_id: hass_version
      icon: mdi:home-assistant
      state: >
        {{ 'Laatste' if states('sensor.hass_version_installed') == 
        states('sensor.hass_version_latest') else states('sensor.hass_version_latest') }}
      attributes:
        friendly_name: >
          Geïnstalleerd {{ states('sensor.hass_version_installed') }}

    - unique_id: hacs_version
      state: >
        {{ device_attr(device_id('sensor.hacs'), 'sw_version') }}

    - unique_id: dockermon_mem
      icon: mdi:memory
      state: >
        {% set entity_id = 'sensor.docker_cpu' %}
        {{ (state_attr(entity_id, 'memory_stats')['usage'] / 
        state_attr(entity_id, 'memory_stats')['limit'] * 100) | round(1) | default(0) }}
      attributes:
        friendly_name: Geheugen

    - unique_id: hue_motion_battery_badrum
      device_class: battery
      unit_of_measurement: '%'
      state: >
        {{ state_attr('binary_sensor.sensor_badrum_motion', 'battery_level') }}
      attributes:
        friendly_name: Sensor Badrum

    - unique_id: hue_motion_battery_hall
      device_class: battery
      unit_of_measurement: '%'
      state: >
        {{ state_attr('binary_sensor.sensor_hall_motion', 'battery_level') }}
      attributes:
        friendly_name: Sensor Hall

    - unique_id: hue_motion_battery_garderob
      device_class: battery
      unit_of_measurement: '%'
      state: >
        {{ state_attr('binary_sensor.sensor_garderob_motion', 'battery_level') }}
      attributes:
        friendly_name: Sensor Garderob